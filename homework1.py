# -*- coding: utf-8 -*-
"""homework1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z1ZJjDe8HPcLVl7dSaRtKRl_yTKtjg11

**Homework 1**

We begin by importing pandas and loading the `flights` dataset:
"""

import pandas as pd
flights=pd.read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/nycflights13/flights.csv")

"""Let's take a look at the first few lines:"""

flights.head()

"""It's hard to see all the columnns at once, but we can list them:"""

flights.columns

"""*Problem 0.* You'll notice that first column is unnecessary. Use `.drop` to create a DataFrame called `Flights` from `flights` by removing it."""

Flights=flights.drop(columns='rownames')
Flights.head()

"""*Problem 1.* Create new dataframes from `Flights` with the following columns:

Only the year column.
"""

FlightsYear=Flights[['year']]
FlightsYear

"""Only the carrier and tail number."""

CarrierTailNum=Flights[['carrier','tailnum']]
CarrierTailNum

"""'year' through 'origin'."""

YearThroughOrigin=Flights.loc[:,'year':'origin']
YearThroughOrigin

"""All columns except the year."""

NotYear=Flights.drop(columns='year')
NotYear

"""Any columns ending with the word "time". (Hint: python's "endswith" string method may be helpful here.)"""

TimeEnding=Flights.loc[:,Flights.columns.str.endswith('time')]
TimeEnding

"""The first 9 columns."""

FirstNine=Flights.iloc[:,:9]
FirstNine

"""*Problem 2.* Remove rows from `Flights` so that all remaining rows correspond to flights that satisfy the following conditions:

Had an arrival delay of more than 2 hours.
"""

TwoHourDelays=flights[flights.arr_delay>120]
TwoHourDelays

"""Flew to Houston (airport codes `IAH` or `HOU`)."""

ToHouston=Flights[(Flights.dest=='IAH') | (Flights.dest=='HOU')]
ToHouston

"""Departed from JFK in July."""

FromJFKinJuly=Flights[(Flights.origin=='JFK') & (Flights.month==7)]
FromJFKinJuly

"""Do not have missing departure times."""

KnownDepTime=Flights[Flights.dep_time.notna()]
KnownDepTime